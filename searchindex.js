Search.setIndex({"docnames": ["files/index", "files/installation", "files/pre", "files/prerequisites", "files/running", "index"], "filenames": ["files/index.rst", "files/installation.rst", "files/pre.rst", "files/prerequisites.rst", "files/running.rst", "index.rst"], "titles": ["Table of Contents", "Installation", "Preprocessing", "Prerequisites", "PyHLicorn", "PyHLicorn Documentation"], "terms": {"prerequisit": [0, 5], "requir": 0, "run": 0, "parallel": [0, 4], "instal": [0, 5], "us": [0, 2, 3, 4], "pip": [0, 3], "github": 0, "pyhlicorn": [0, 1], "hlicorn": [0, 4], "preprocess": [0, 5], "discret": [0, 4], "data": [0, 4, 5], "gene": [0, 4, 5], "list": [0, 4], "venv": [1, 3], "r": 1, "requirn": 1, "txt": 1, "git": 1, "clone": 1, "n": 2, "mu": 2, "t": 2, "time": 2, "sigma": 2, "rightarrow": 2, "1": [2, 3, 4], "given": 2, "continu": 2, "log2": 2, "express": [2, 4], "matrix": [2, 4], "thi": [2, 3, 4, 5], "function": [2, 4], "valu": [2, 4], "binari": 2, "base": 2, "fold": 2, "chang": [2, 4], "comparison": 2, "The": [2, 4, 5], "behavior": [2, 3], "depend": [2, 3], "input": 2, "neg": 2, "If": [2, 4], "contain": [2, 4], "i": [2, 3, 4, 5], "assum": 2, "alreadi": 2, "correct": 2, "format": [2, 4], "appli": 2, "hard": 2, "threshold": 2, "directli": 2, "posit": 2, "onli": [2, 4], "common": 2, "normal": 2, "rna": 2, "seq": 2, "singl": 2, "color": 2, "microarrai": 2, "center": 2, "each": [2, 4], "": [2, 4], "its": [2, 4], "mean": [2, 4], "across": 2, "all": [2, 4], "sampl": [2, 4], "set": [2, 3, 4], "refer": 2, "e": 2, "g": 2, "studi": 2, "specif": 2, "diseas": 2, "In": 2, "either": 2, "case": 2, "transform": 2, "For": [2, 4], "abov": 2, "equal": 2, "assign": [2, 3], "below": 2, "within": 2, "rang": 2, "ar": [2, 4], "0": [2, 4], "By": 2, "default": [2, 4], "comput": [2, 3, 4], "overal": 2, "distribut": [2, 3, 4], "numer": [2, 4], "dataset": 2, "rather": 2, "than": 2, "predefin": 2, "2": 2, "correspond": [2, 4], "two": [2, 4], "four": 2, "increas": 2, "decreas": 2, "choic": 2, "made": 2, "accommod": 2, "variabl": 2, "between": [2, 4], "differ": 2, "technologi": 2, "decis": 2, "simpl": 2, "multipli": 2, "global": 2, "standard": [2, 3], "deviat": 2, "remain": 2, "flexibl": 2, "classmethod": [2, 4], "refsampl": 2, "none": [2, 4], "sdby": 2, "true": [2, 4], "sourc": [2, 4], "paramet": [2, 3, 4], "numericalexpress": 2, "panda": [2, 4], "datafram": [2, 4], "A": [2, 3, 4], "level": [2, 4], "transcript": [2, 4, 5], "factor": [2, 4, 5], "infer": [2, 4, 5], "network": [2, 4, 5], "float": [2, 4], "fix": 2, "can": [2, 3, 4], "anoth": [2, 4], "method": [2, 4], "option": [2, 4], "vector": 2, "column": [2, 4], "name": [2, 4], "indic": [2, 4], "presenc": 2, "should": [2, 4], "scale": [2, 5], "str": [2, 4], "specifi": [2, 3, 4], "calcul": [2, 4], "individu": 2, "step": 2, "skip": 2, "bool": [2, 4], "whether": 2, "return": [2, 4], "pd": 2, "gene_list": [2, 4], "tf_list": [2, 4], "which": [2, 4, 5], "regulatori": [2, 4, 5], "These": [2, 4], "appear": [2, 4], "row": [2, 4], "provid": [2, 4], "numerical_express": [2, 4], "design": [2, 3, 4], "tf": [2, 4], "regul": [2, 4, 5], "python": 3, "3": [3, 4], "10": 3, "x": 3, "java": 3, "8": 3, "11": 3, "17": 3, "apach": 3, "spark": [3, 4], "we": 3, "recommend": 3, "It": 3, "advis": 3, "creat": 3, "new": 3, "eviron": 3, "spesif": 3, "packag": [3, 4, 5], "avoid": 3, "issu": 3, "an": 3, "conda": 3, "pyspark": 3, "environ": 3, "typic": 3, "cluster": [3, 4], "laptop": 3, "due": 3, "potenti": [3, 4], "perform": 3, "resourc": 3, "constraint": 3, "proce": 3, "caution": 3, "you": 3, "choos": 3, "core": [3, 4], "alloc": 3, "n_job": 3, "when": 3, "do": [3, 4], "explicitli": 3, "num_cor": [3, 4], "mai": 3, "caus": 3, "joblib": [3, 4], "lead": 3, "unintend": 3, "process": [3, 4], "degrad": 3, "To": 3, "ensur": 3, "number": [3, 4], "appropri": 3, "configur": 3, "session": [3, 4], "backend": [3, 4], "class": 4, "pyproject": 4, "discrete_express": 4, "min_gene_support": 4, "min_coreg_support": 4, "max_coreg": 4, "search_thresh": 4, "3333333333333333": 4, "ngrn": 4, "100": 4, "multicor": 4, "joblib_backend": 4, "loki": 4, "lr_backend": 4, "sequenti": 4, "linear_model": 4, "cvlm": 4, "verbos": 4, "fals": 4, "hybrid": 4, "learn": [4, 5], "co": [4, 5], "oper": 4, "techniqu": 4, "analyz": [4, 5], "same": 4, "dimens": 4, "where": 4, "under": [4, 5], "over": 4, "minimum": 4, "proport": 4, "must": 4, "have": 4, "non": 4, "zero": 4, "consid": 4, "share": 4, "int": 4, "maximum": 4, "size": 4, "group": 4, "reduc": 4, "save": 4, "memori": 4, "strategi": 4, "multipl": 4, "cpu": 4, "avail": 4, "multiprocess": 4, "thread": 4, "nest": 4, "linear": 4, "regress": 4, "sparksess": 4, "lm": 4, "model": [4, 5], "cross": 4, "valid": 4, "ordinari": 4, "No": 4, "grn": 4, "displai": 4, "addit": 4, "log": 4, "inform": 4, "dure": 4, "execut": 4, "attribut": 4, "describ": 4, "target": [4, 5], "act": [4, 5], "activ": [4, 5], "rep": 4, "repressor": 4, "coef": 4, "coeffici": 4, "coact": 4, "corep": 4, "r2": 4, "determin": 4, "rmse": 4, "root": 4, "squar": 4, "error": 4, "grn_info": 4, "dict": 4, "metadata": 4, "dictionari": 4, "includ": 4, "len": 4, "co_reg": 4, "adjacencylist": 4, "repres": 4, "adjac": 4, "kei": 4, "outer": 4, "interact": 4, "other": 4, "bygen": 4, "bytf": 4, "repress": 4, "inferenceparamet": 4, "exampl": 4, "coregul": 4, "pair": 4, "reg1": 4, "One": 4, "reg2": 4, "support": 4, "fishertest": 4, "fisher": 4, "exact": 4, "test": 4, "p": 4, "fisher_exact": 4, "altern": 4, "greater": 4, "from": [4, 5], "scipi": 4, "stat": 4, "adjustedpvalu": 4, "adjust": 4, "holm": 4, "statsmodel": 4, "multitest": 4, "genea": 4, "geneb": 4, "object": 4, "type": 4, "coregnet": 4, "well": 4, "get_grn": 4, "get": 4, "directori": 4, "load_grn_json": 4, "file_path": 4, "load": 4, "json": 4, "file": 4, "prefer": 4, "path": 4, "save_grn": 4, "local": 4, "pickl": 4, "save_to_json": 4, "aim": 5, "larg": 5, "transcriptom": 5, "integr": 5, "extern": 5, "program": 5, "particular": 5, "algorithm": 5, "propos": 5, "cooper": 5, "manner": 5, "synergist": 5, "project": 5, "develop": 5, "tabl": 5, "content": 5}, "objects": {"pyProject.core": [[4, 0, 1, "", "HLicorn"]], "pyProject.core.HLicorn": [[4, 1, 1, "", "get_grn"], [4, 1, 1, "", "load_grn_json"], [4, 1, 1, "", "save_grn"], [4, 1, 1, "", "save_to_json"]], "pyProject.core.PreProcess": [[2, 1, 1, "", "discretization"], [2, 1, 1, "", "gene_list"]]}, "objtypes": {"0": "py:class", "1": "py:method"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"]}, "titleterms": {"tabl": 0, "content": 0, "instal": 1, "us": 1, "pip": 1, "github": 1, "preprocess": 2, "discret": 2, "data": 2, "gene": 2, "list": 2, "prerequisit": 3, "requir": 3, "run": 3, "parallel": 3, "pyhlicorn": [4, 5], "document": 5}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Table of Contents": [[0, "table-of-contents"]], "Installation": [[1, "installation"]], "Using Pip": [[1, "using-pip"]], "Using Github": [[1, "using-github"]], "Preprocessing": [[2, "preprocessing"]], "Discretization Data": [[2, "discretization-data"]], "Gene List": [[2, "gene-list"]], "Prerequisites": [[3, "prerequisites"]], "Requirements:": [[3, "requirements"]], "Running on Parallel": [[3, "running-on-parallel"]], "PyHLicorn": [[4, "pyhlicorn"]], "PyHLicorn Documentation": [[5, "pyhlicorn-documentation"]]}, "indexentries": {"discretization() (pyproject.core.preprocess class method)": [[2, "pyProject.core.PreProcess.discretization"]], "gene_list() (pyproject.core.preprocess class method)": [[2, "pyProject.core.PreProcess.gene_list"]], "hlicorn (class in pyproject.core)": [[4, "pyProject.core.HLicorn"]], "get_grn() (pyproject.core.hlicorn class method)": [[4, "pyProject.core.HLicorn.get_grn"]], "load_grn_json() (pyproject.core.hlicorn class method)": [[4, "pyProject.core.HLicorn.load_grn_json"]], "save_grn() (pyproject.core.hlicorn method)": [[4, "pyProject.core.HLicorn.save_grn"]], "save_to_json() (pyproject.core.hlicorn method)": [[4, "pyProject.core.HLicorn.save_to_json"]]}})