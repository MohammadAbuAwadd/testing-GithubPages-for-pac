Search.setIndex({"docnames": ["files/index", "files/installation", "files/prerequisites", "files/running", "index"], "filenames": ["files/index.rst", "files/installation.rst", "files/prerequisites.rst", "files/running.rst", "index.rst"], "titles": ["Table of Contents", "Installation", "Prerequisites", "PyHLicorn", "PyHLicorn Documentation"], "terms": {"prerequisit": [0, 4], "requir": 0, "run": 0, "parallel": [0, 3], "instal": [0, 4], "us": [0, 2, 3], "pip": [0, 2], "github": 0, "pyhlicorn": [0, 1], "hlicorn": [0, 3], "venv": [1, 2], "r": 1, "requirn": 1, "txt": 1, "git": 1, "clone": 1, "python": 2, "3": [2, 3], "10": 2, "x": 2, "java": 2, "8": 2, "11": 2, "17": 2, "apach": 2, "spark": [2, 3], "we": 2, "recommend": 2, "It": 2, "i": [2, 3, 4], "advis": 2, "creat": 2, "new": 2, "eviron": 2, "spesif": 2, "thi": [2, 3, 4], "packag": [2, 3, 4], "avoid": 2, "issu": 2, "depend": 2, "an": 2, "conda": 2, "pyspark": 2, "environ": 2, "design": [2, 3], "distribut": [2, 3], "comput": [2, 3], "typic": 2, "cluster": [2, 3], "standard": 2, "laptop": 2, "due": 2, "potenti": [2, 3], "perform": 2, "resourc": 2, "constraint": 2, "proce": 2, "caution": 2, "you": 2, "choos": 2, "core": [2, 3], "alloc": 2, "n_job": 2, "paramet": [2, 3], "when": 2, "do": [2, 3], "explicitli": 2, "assign": 2, "num_cor": [2, 3], "1": [2, 3], "mai": 2, "caus": 2, "joblib": [2, 3], "set": [2, 3], "behavior": 2, "can": [2, 3], "lead": 2, "unintend": 2, "process": [2, 3], "degrad": 2, "To": 2, "ensur": 2, "specifi": [2, 3], "number": [2, 3], "appropri": 2, "configur": 2, "A": [2, 3], "session": [2, 3], "backend": [2, 3], "class": 3, "pyproject": 3, "numerical_express": 3, "tf_list": 3, "discrete_express": 3, "gene_list": 3, "none": 3, "min_gene_support": 3, "0": 3, "min_coreg_support": 3, "max_coreg": 3, "search_thresh": 3, "3333333333333333": 3, "ngrn": 3, "100": 3, "multicor": 3, "joblib_backend": 3, "loki": 3, "lr_backend": 3, "sequenti": 3, "linear_model": 3, "cvlm": 3, "verbos": 3, "fals": 3, "sourc": 3, "hybrid": 3, "learn": [3, 4], "co": [3, 4], "oper": 3, "regul": [3, 4], "network": [3, 4], "function": 3, "infer": [3, 4], "gene": [3, 4], "regulatori": [3, 4], "techniqu": 3, "analyz": [3, 4], "express": 3, "data": [3, 4], "transcript": [3, 4], "factor": [3, 4], "panda": 3, "datafram": 3, "numer": 3, "matrix": 3, "contain": 3, "level": 3, "list": 3, "tf": 3, "should": 3, "name": 3, "same": 3, "dimens": 3, "column": 3, "indic": 3, "onli": 3, "valu": 3, "where": 3, "under": [3, 4], "chang": 3, "over": 3, "option": 3, "default": 3, "which": [3, 4], "These": 3, "appear": 3, "row": 3, "If": 3, "provid": 3, "all": 3, "ar": 3, "float": 3, "between": 3, "minimum": 3, "proport": 3, "sampl": 3, "must": 3, "have": 3, "non": 3, "zero": 3, "discret": 3, "consid": 3, "share": 3, "int": 3, "The": [3, 4], "maximum": 3, "size": 3, "group": 3, "reduc": 3, "save": 3, "memori": 3, "strategi": 3, "multipl": 3, "cpu": 3, "avail": 3, "multiprocess": 3, "thread": 3, "nest": 3, "linear": 3, "regress": 3, "sparksess": 3, "lm": 3, "model": [3, 4], "cross": 3, "valid": 3, "ordinari": 3, "No": 3, "grn": 3, "return": 3, "bool": 3, "true": 3, "displai": 3, "addit": 3, "log": 3, "inform": 3, "dure": 3, "execut": 3, "attribut": 3, "describ": 3, "target": [3, 4], "str": 3, "act": [3, 4], "activ": [3, 4], "each": 3, "rep": 3, "repressor": 3, "coef": 3, "coeffici": 3, "coact": 3, "corep": 3, "r2": 3, "note": 3, "determin": 3, "rmse": 3, "root": 3, "mean": 3, "squar": 3, "error": 3, "grn_info": 3, "dict": 3, "metadata": 3, "dictionari": 3, "includ": 3, "len": 3, "co_reg": 3, "adjacencylist": 3, "repres": 3, "adjac": 3, "kei": 3, "outer": 3, "correspond": 3, "anoth": 3, "its": 3, "interact": 3, "other": 3, "For": 3, "exampl": 3, "bygen": 3, "bytf": 3, "repress": 3, "inferenceparamet": 3, "coregul": 3, "pair": 3, "reg1": 3, "One": 3, "reg2": 3, "two": 3, "support": 3, "measur": 3, "e": 3, "g": 3, "correl": 3, "p": 3, "fishertest": 3, "adjustedpvalu": 3, "genea": 3, "geneb": 3, "method": 3, "object": 3, "": 3, "format": 3, "type": 3, "coregnet": 3, "well": 3, "classmethod": 3, "get_grn": 3, "get": 3, "from": [3, 4], "directori": 3, "load_grn_json": 3, "file_path": 3, "load": 3, "json": 3, "file": 3, "prefer": 3, "path": 3, "save_grn": 3, "local": 3, "pickl": 3, "save_to_json": 3, "aim": 4, "larg": 4, "scale": 4, "transcriptom": 4, "integr": 4, "extern": 4, "program": 4, "particular": 4, "algorithm": 4, "propos": 4, "cooper": 4, "manner": 4, "synergist": 4, "project": 4, "develop": 4, "tabl": 4, "content": 4}, "objects": {"pyProject.core": [[3, 0, 1, "", "HLicorn"]], "pyProject.core.HLicorn": [[3, 1, 1, "", "get_grn"], [3, 1, 1, "", "load_grn_json"], [3, 1, 1, "", "save_grn"], [3, 1, 1, "", "save_to_json"]]}, "objtypes": {"0": "py:class", "1": "py:method"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"]}, "titleterms": {"tabl": 0, "content": 0, "instal": 1, "us": 1, "pip": 1, "github": 1, "prerequisit": 2, "requir": 2, "run": 2, "parallel": 2, "pyhlicorn": [3, 4], "document": 4}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Table of Contents": [[0, "table-of-contents"]], "Installation": [[1, "installation"]], "Using Pip": [[1, "using-pip"]], "Using Github": [[1, "using-github"]], "Prerequisites": [[2, "prerequisites"]], "Requirements:": [[2, "requirements"]], "Running on Parallel": [[2, "running-on-parallel"]], "PyHLicorn": [[3, "pyhlicorn"]], "PyHLicorn Documentation": [[4, "pyhlicorn-documentation"]]}, "indexentries": {"hlicorn (class in pyproject.core)": [[3, "pyProject.core.HLicorn"]], "get_grn() (pyproject.core.hlicorn class method)": [[3, "pyProject.core.HLicorn.get_grn"]], "load_grn_json() (pyproject.core.hlicorn class method)": [[3, "pyProject.core.HLicorn.load_grn_json"]], "save_grn() (pyproject.core.hlicorn method)": [[3, "pyProject.core.HLicorn.save_grn"]], "save_to_json() (pyproject.core.hlicorn method)": [[3, "pyProject.core.HLicorn.save_to_json"]]}})